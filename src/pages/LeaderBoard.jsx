import { useQuery } from "@tanstack/react-query";
import useAxiosSecure from "../hooks/useAxiosSecure";
import LoadingSpinner from "../components/Shared/LoadingSpinner";
import { useEffect, useState } from "react";

const LeaderBoard = () => {
  const [count, setCount] = useState(0)
  const axionSecure = useAxiosSecure();
  const { data: contests = [], isLoading } = useQuery({
    queryKey: ["leader"],
    queryFn: async () => {
      const { data } = await axionSecure.get(`/leaderboard`);
      return data;
    },
  });

  const winCounts = {};
  contests.forEach((contest) => {
    const winner = contest.winerData;
    const winnerEmail = contest.winerData?.winerEmal;

    if (winnerEmail) {
      if (!winCounts[winnerEmail]) {
        winCounts[winnerEmail] = { count: 0, winner: winner };
      }
      winCounts[winnerEmail].count++;
    }
  });

  let topWinner = null;
  let maxWins = 0;
  for (const [winnerEmail, winData] of Object.entries(winCounts)) {
    if (winData.count > maxWins) {
      maxWins = winData.count;
      topWinner = winData.winner;
    }
  }
  const metricsData = [
    {
      value: '5.4M+',
      title: 'Total Participate',
      description: 'The total number of registered users on the platform.',
    },
    {
      value: '$80K',
      title: 'Revenue',
      description: 'The total revenue generated by the application.',
    },
    {
      value: '100K',
      title: 'Engagement',
      description: 'The level of user engagement with the application\'s content and features.',
    },
    {
      value: '99.9%',
      title: 'Server Uptime',
      description: 'The percentage of time the server has been operational and available.',
    },
  ];
  useEffect( () =>{
    axionSecure.get(`/ContestCount`)
    
    .then( res=> setCount(res.data.count))
        
}, [])
console.log(count, "this is count")
if (isLoading) {
  return <LoadingSpinner></LoadingSpinner>;
}
  return (
    // <div className="container mx-auto mt-10">
    //   <h1 className="text-3xl font-bold text-center mb-5">Leaderboard</h1>
    //   <p className="text-center">Celebrating our top performers and their outstanding achievements. <br /> Get inspired by their success stories and join the journey to excellence!</p>
    //   {/* <div className="p-4 bg-white shadow-md rounded-lg flex flex-col justify-center items-center mt-14">
    //     <h2 className="text-2xl font-bold mb-2">Top Winner</h2>
    //     <div className="flex items-center space-x-4">
    //       <img
    //         src={topWinner?.winerPhoto}
    //         alt={topWinner?.winerName}
    //         className="w-10 h-10 rounded-full"
    //       />
    //       <div>
    //         <p className="font-medium">{topWinner?.winerName}</p>
    //         <p className="text-sm text-gray-500">{topWinner?.winerEmal}</p>
    //         <p className="text-xl font-bold">{maxWins/2} Wins</p>
    //       </div>
    //     </div>
    //   </div> */}
    //   <img src={'https://i.ibb.co.com/9wHbmhC/finalists2008-small.jpg'} alt="" />
    // </div>
    <div>
        <div className="relative font-[sans-serif] before:absolute before:w-full before:h-full before:inset-0 before:bg-black before:opacity-60 before:z-10">
      <img
        src="https://readymadeui.com/cardImg.webp"
        alt="Banner Image"
        className="absolute inset-0 w-full h-full object-cover"
      />
      <div className="min-h-[370px] relative z-50 h-full max-w-6xl mx-auto flex flex-col justify-center items-center text-center px-4 py-8">
        <h2 className="text-4xl font-bold mb-16 text-center text-white">
          Application Metrics
        </h2>
        <div className="grid lg:grid-cols-4 sm:grid-cols-2 gap-6 max-lg:gap-12">
          {metricsData.map((metric, index) => (
            <div key={index} className="text-center">
              <h3 className="text-white text-[38px] font-bold">{metric.value}</h3>
              <p className="text-base text-gray-400 font-bold mt-3">{metric.title}</p>
              <p className="leading-relaxed text-sm text-gray-200 mt-2">
                {metric.description}
              </p>
            </div>
          ))}
        </div>
      </div>
    </div>
    </div>
  );
};

export default LeaderBoard;
